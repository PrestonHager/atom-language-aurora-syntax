# If this is your first time writing a language grammar, check out:
#   - https://flight-manual.atom.io/hacking-atom/sections/creating-a-grammar/

'scopeName': 'source.aurora'
'name': 'Aurora'
'fileTypes': [
  'aurora'
]
'limitLineLength': false
'patterns': [
  {
    'comment': 'The comment structure. Any line that begins with a "//" and/or whitespace is considered a comment.'
    'match': '^\\s*//.*$'
    'name': 'comment.aurora'
  },
  {
    'match': '".*?"'
    'name': 'meta.string.aurora'
  },
  {
    'match': '([0-9]+)(\\.[0-9]+)?'
    'name': 'meta.number.aurora'
    'captures':
      0:
        'name': 'constant.number.aurora'
  }
  {
    'comment': 'All the keywords in Aurora, including String, Number, func, and end.'
    'match': '(String|Number|func|end|Void)'
    'name': 'meta.keyword.aurora'
  },
  {
    'comment': 'The special puncuation and symbols in Aurora.'
    'match': '(=>)'
    'name': 'meta.special.puncuation.aurora'
    'captures':
      1:
        'name': 'entity.name.type.aurora'
  },
  {
    'begin': '(\\w+)(\\()'
    'beginCaptures':
      0:
        'name': 'meta.function.aurora'
      1:
        'name': 'entity.name.function.aurora'
      2:
        'name': 'puncuation.function.aurora'
    'end': '(\\))'
    'endCaptures':
      0:
        'name': 'meta.function.aurora'
      1:
        'name': 'puncuation.function.aurora'
    'patterns': [
      {
        'match': '".*?"'
        'name': 'constant.string.aurora'
      },
      {
        'match': '(\\w+)(::)(String|Number)'
        'name': 'meta.parameter.aurora'
        'captures':
          1:
            'name': 'entity.other.attribute-name.aurora'
          2:
            'name': 'puncuation.function.parameters.aurora'
          3:
            'name': 'keyword.function.parameters.aurora'
      },
      {
        'match': '(\\w+)'
        'name': 'meta.function.parameters.aurora'
        'captures':
          1:
            'name': 'entity.other.attribute-name.aurora'
      }
    ]
  }
]
